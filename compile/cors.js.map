{
"version":3,
"file":"compile/cors.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@goa/vary/src/index.js","src/depack.js","src/index.js"],
"sourcesContent":["/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nconst FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n * @param {string} header\n * @param {string|!Array<string>} field\n */\nexport function append(header, field) {\n  if (typeof header != 'string')\n    throw new TypeError('header argument is required')\n\n  if (!field)\n    throw new TypeError('field argument is required')\n\n  // get fields array\n  const fields = !Array.isArray(field) ? parse(`${field}`) : field\n\n  // assert on invalid field names\n  for (let j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header == '*') return header\n\n  // enumerate current values\n  var val = header\n  const vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.includes('*') || vals.includes('*'))\n    return '*'\n\n  for (let i = 0; i < fields.length; i++) {\n    const fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (!vals.includes(fld)) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n * @param {string} header\n */\nfunction parse(header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n    case 0x20: /*   */\n      if (start == end) {\n        start = end = i + 1\n      }\n      break\n    case 0x2c: /* , */\n      list.push(header.substring(start, end))\n      start = end = i + 1\n      break\n    default:\n      end = i + 1\n      break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {http.ServerResponse} res\n * @param {string|!Array<string>} field\n */\nexport default function vary(res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  let val = res.getHeader('Vary') || ''\n  const header = Array.isArray(val)\n    ? val.join(', ')\n    : `${val}`\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ServerResponse} http.ServerResponse\n */\n","import '@externs/goa'\nimport '../types/externs'\nimport cors from './'\n\nmodule.exports = {\n  '_cors': cors,\n}","import { append } from '@goa/vary'\n\n/**\n * @type {_goa.cors}\n */\nfunction Cors(config = {}) {\n  let {\n    allowMethods = 'GET,HEAD,PUT,POST,DELETE,PATCH',\n    exposeHeaders,\n    allowHeaders,\n    maxAge,\n    credentials = false,\n    keepHeadersOnError = true,\n    origin: Origin,\n  } = config\n\n  if (Array.isArray(allowMethods))\n    allowMethods = allowMethods.join(',')\n\n  if (Array.isArray(exposeHeaders))\n    exposeHeaders = exposeHeaders.join(',')\n\n  if (Array.isArray(allowHeaders))\n    allowHeaders = allowHeaders.join(',')\n\n  if (maxAge) maxAge = `${maxAge}`\n\n  /**\n   * @type {!_goa.Middleware}\n   */\n  async function cors(ctx, next) {\n    // If the Origin header is not present terminate this set of steps.\n    // The request is outside the scope of this specification.\n    const requestOrigin = ctx.get('Origin')\n\n    // Always set Vary header\n    // https://github.com/rs/cors/issues/10\n    ctx.vary('Origin')\n\n    if (!requestOrigin) return await next()\n\n    let origin\n    if (typeof Origin == 'function') {\n      origin = Origin(ctx)\n      if (origin instanceof Promise) origin = await origin\n      if (!origin) return await next()\n    } else {\n      origin = Origin || requestOrigin\n    }\n\n    const headersSet = {}\n\n    function set(key, value) {\n      ctx.set(key, value)\n      headersSet[key] = value\n    }\n\n    if (ctx.method != 'OPTIONS') {\n      // Simple Cross-Origin Request, Actual Request, and Redirects\n      set('Access-Control-Allow-Origin', origin)\n\n      if (credentials)\n        set('Access-Control-Allow-Credentials', 'true')\n\n      if (exposeHeaders)\n        set('Access-Control-Expose-Headers', exposeHeaders)\n\n      ctx.app.emit('use', '@goa/cors', 'headers')\n\n      if (!keepHeadersOnError) {\n        return await next()\n      }\n      try {\n        return await next()\n      } catch (err) {\n        const errHeadersSet = err['headers'] || {}\n        const varyWithOrigin = append(errHeadersSet['vary'] || errHeadersSet['Vary'] || '', 'Origin')\n        delete errHeadersSet.Vary\n\n        err['headers'] = Object.assign({}, errHeadersSet, headersSet, { 'vary': varyWithOrigin })\n\n        throw err\n      }\n    } else {\n      // Preflight Request\n\n      // If there is no Access-Control-Request-Method header or if parsing failed,\n      // do not set any additional headers and terminate this set of steps.\n      // The request is outside the scope of this specification.\n      if (!ctx.get('Access-Control-Request-Method')) {\n        // this not preflight request, ignore it\n        return await next()\n      }\n      ctx.app.emit('use', '@goa/cors', 'options')\n\n      ctx.set('Access-Control-Allow-Origin', origin)\n\n      if (credentials)\n        ctx.set('Access-Control-Allow-Credentials', 'true')\n\n      if (maxAge)\n        ctx.set('Access-Control-Max-Age', maxAge)\n\n      if (allowMethods)\n        ctx.set('Access-Control-Allow-Methods', allowMethods)\n\n      if (!allowHeaders)\n        allowHeaders = ctx.get('Access-Control-Request-Headers')\n\n      if (allowHeaders) {\n        ctx.set('Access-Control-Allow-Headers', allowHeaders)\n      }\n\n      ctx.status = 204\n    }\n  }\n  return cors\n}\n\nexport default Cors\n\n/**\n * @typedef {import('../').CorsConfig} _goa.CorsConfig\n */\n/**\n * @typedef {import('../').cors} _goa.cors\n */\n/**\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */"],
"names":["FIELD_NAME_REGEXP","parse","header","end","list","start","i","len","length","charCodeAt","push","substring","module","exports","Cors","config","allowMethods","exposeHeaders","allowHeaders","maxAge","credentials","keepHeadersOnError","Origin","Array","isArray","join","cors","ctx","next","requestOrigin","get","vary","origin","Promise","headersSet","method","set","key","value","app","emit","err","errHeadersSet","TypeError","fields","field","j","test","val","vals","toLowerCase","includes","fld","Vary","Object","assign","varyWithOrigin","status"]
}
